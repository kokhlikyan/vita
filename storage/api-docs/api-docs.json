{
    "openapi": "3.0.0",
    "info": {
        "title": "Vita API Documentation",
        "description": "petshop api",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "local server"
        },
        {
            "url": "https://8009.freelancedeveloper.site",
            "description": "remote server"
        }
    ],
    "paths": {
        "/api/v1/auth/email/send": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send verification code to email",
                "operationId": "e00d8750ad1035e707f862954da19346",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to send verification code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send verification code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/email/verify": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify email with code",
                "operationId": "cc77e8a4294b1f169d0541eb870894eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@mail.ru"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification code is correct",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Verification code is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/update": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update user information",
                "operationId": "b0cdefcb4bf858fe0c978894445eb1b7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+374 77 777777"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to update user information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update user information"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/{provider}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Auth with socialite",
                "operationId": "eab5aa2eb2419cc6ff8f1504168a7c83",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "The social provider (e.g., google, facebook, apple)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirection to social provider for authentication"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/v1/auth/{provider}/callback": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Callback from socialite",
                "operationId": "2a1f1c48a24b41cbbc1c30d487cff7b7",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "The social provider (e.g., google, facebook)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the request",
                                            "type": "boolean"
                                        },
                                        "token": {
                                            "description": "JWT token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/v1/auth/{provider}/token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate with social provider",
                "operationId": "b38599c89324949d049c7b37f7d09f9a",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "The social provider (e.g., google, facebook)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the request",
                                            "type": "boolean"
                                        },
                                        "token": {
                                            "description": "JWT token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/v1/blocks": {
            "get": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Get all blocks",
                "operationId": "fb220b334b9dd6b08f401c28caf3028e",
                "responses": {
                    "200": {
                        "description": "Blocks found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BlockSchema"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Create a new block",
                "operationId": "576cceb20d0c7fc8e16fb2925b4cd38b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "purpose": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "type": {
                                        "description": "Type of the block should be one of the following: temporary, permanent, completed",
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "05.06.2024"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "05.06.2024"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "12:15"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Block created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BlockSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/blocks/{id}": {
            "get": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Find resource by ID",
                "operationId": "b60307510426a2fac6a608b68be9d188",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blocks found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BlockSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Update block by ID",
                "operationId": "56687cf2cda3cc9621693f2c68006a65",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "purpose": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "type": {
                                        "description": "Type of the block should be one of the following: temporary, permanent, completed",
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "05.06.2024"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "05.06.2024"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "12:15"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Block updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BlockSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Delete block by ID",
                "operationId": "5093e1c101cc7291210b2e637bf7aa6c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/goals": {
            "get": {
                "tags": [
                    "Goals"
                ],
                "summary": "Get all goals",
                "operationId": "4ae61f35a0af652b8531ed4ca6b84cc4",
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GoalSchema"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Goals"
                ],
                "summary": "Create a new goal",
                "operationId": "5359aab8d13af7f32921d890d8630a0b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Goal created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GoalSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/goals/{id}": {
            "get": {
                "tags": [
                    "Goals"
                ],
                "summary": "Find goal by ID",
                "operationId": "c23424a1280a9b9f7e5de1f9f5afdc6e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GoalSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Goals"
                ],
                "summary": "Update goal by ID",
                "operationId": "aa1ece6b002c55429ef6015761ba5f9f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Goal updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GoalSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Goals"
                ],
                "summary": "Delete goal by ID",
                "operationId": "e3b6b0e1f30e0ddd74a63e0404039fcb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/habits": {
            "get": {
                "tags": [
                    "Habits"
                ],
                "summary": "Get all habits",
                "operationId": "e781f76fd118549cf5dc78fbe7342ea9",
                "responses": {
                    "200": {
                        "description": "List of habits",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/HabitSchema"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Habits"
                ],
                "summary": "Create a new habit",
                "operationId": "6c590ac289ee84e35c3dc43116f24a2f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Habit created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/HabitSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/habits/{id}": {
            "get": {
                "tags": [
                    "Habits"
                ],
                "summary": "Find goal by ID",
                "operationId": "b11aeef9c05269c146abc013e492d5e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Habit found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/HabitSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Habits"
                ],
                "summary": "Delete habit by ID",
                "operationId": "50487dfdde78ae4bda8621e14dd06e57",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/Habits/{id}": {
            "put": {
                "tags": [
                    "Habits"
                ],
                "summary": "Update habit by ID",
                "operationId": "ab048166eeab0f61e14b06964a6d1c87",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Habit updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/HabitSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks",
                "operationId": "1adfc7d9e566ea6e76d6344bfb0739f4",
                "responses": {
                    "200": {
                        "description": "Tasks found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaskSchema"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "30abc4979acc22c17b16032f97e44513",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "block_id",
                                    "goal_id",
                                    "habit_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Task title"
                                    },
                                    "details": {
                                        "type": "string",
                                        "example": "Task details"
                                    },
                                    "block_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "goal_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "habit_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "completed": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "all_day": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2022-06-10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TaskSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Find resource by ID",
                "operationId": "819042b33a352f9868230ffd7de84923",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TaskSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task by ID",
                "operationId": "ce77bb2a7ef9bf3105323544da7088ee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{id}/completed": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Mark task as completed or uncompleted",
                "operationId": "d5eb611889383f606e62404514827132",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource updated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BlockSchema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string"
                    },
                    "purpose": {
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the block should be one of the following: temporary, permanent, completed",
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "tasks": {
                        "$ref": "#/components/schemas/TaskSchema"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "12:00:00"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "12:00:00"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "GoalSchema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    },
                    "tasks": {
                        "$ref": "#/components/schemas/TaskSchema"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "HabitSchema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    },
                    "tasks": {
                        "$ref": "#/components/schemas/TaskSchema"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "RecurrenceSchema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "task_id": {
                        "type": "integer"
                    },
                    "recurrence_type": {
                        "type": "string",
                        "example": "daily, weekly, monthly"
                    },
                    "interval": {
                        "type": "integer"
                    },
                    "day_of_week": {
                        "type": "integer"
                    },
                    "day_of_month": {
                        "type": "integer"
                    },
                    "month_of_year": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TaskSchema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "completed": {
                        "type": "boolean"
                    },
                    "all_day": {
                        "type": "boolean"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "recurrence": {
                        "$ref": "#/components/schemas/RecurrenceSchema"
                    }
                },
                "type": "object"
            },
            "UserSchema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "test@gmail.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}